[{"path":[]},{"path":"/articles/vaccine_impact_estimates.html","id":"number-of-events-averted-by-vaccination-nae","dir":"Articles","previous_headings":"Mathematical Formulas","what":"1. Number of events averted by vaccination (NAE)","title":"Vaccine Impact Estimates","text":"number events averted vaccination time tt calculated : NAEt=eA(t)VCtVEt(1−VCtVEt)NAE_t = e_{(t)} \\frac{VC_t VE_t}{(1 - VC_t VE_t)} : eA(t)e_{(t)}: Number events time tt VCtVC_t: Vaccine coverage time tt VEtVE_t: Vaccine effectiveness time tt","code":""},{"path":"/articles/vaccine_impact_estimates.html","id":"number-of-avertable-events-considering-an-increase-in-final-coverage-nabe","dir":"Articles","previous_headings":"Mathematical Formulas","what":"2. Number of avertable events considering an increase in final coverage (NAbE)","title":"Vaccine Impact Estimates","text":"number averted events alpha parameter time tt: NAbEt(α)=eA(t)VC(α)tVEt(1−VC(α)tVEt)NAbE_t(\\alpha) = e_{(t)} \\frac{VC(\\alpha)_t VE_t}{(1 - VC(\\alpha)_t VE_t)} : eA(t)e_{(t)}: Number events time tt VC(α)tVC(\\alpha)_t: Hypothetical vaccine coverage time tt vaccine coverage increased factor alpha parameter VEtVE_t: Vaccine effectiveness time tt VC(α)tVC(\\alpha)_t computed : VCt(α)=∑=1t(VCt−VCt−1)(1+αVCT)VC_t(\\alpha) = \\sum_{=1}^{t} (VC_t - VC_{t-1}) \\left(1 + \\frac{\\alpha}{VC_T}\\right) : VCtVC_t: Vaccine coverage time tt (VC0=0VC_0 = 0) VCt−1VC_{t-1}: Vaccine coverage time t−1t-1 α\\alpha: Increase final vaccine coverage VCTVC_T: Maximum vaccine coverage","code":""},{"path":"/articles/vaccine_impact_estimates.html","id":"number-needed-to-vaccinate-nnv","dir":"Articles","previous_headings":"Mathematical Formulas","what":"3. Number Needed to Vaccinate (NNV)","title":"Vaccine Impact Estimates","text":"number needed vaccinate time tt calculated : NNVt=1RB(t)VEtNNV_t = \\frac{1}{R_{B(t)} VE_t} RB(t)=eA(t)+NAEtNtR_{B(t)} = \\frac{e_{(t)} + NAE_t}{N_t}, RB(t)R_{B(t)} represents rate events expected counterfactual population without vaccination program : VEtVE_t: Vaccine effectiveness time tt eA(t)e_{(t)}: Number events time tt NAEtNAE_t: Number events averted vaccination time tt NtN_t: Population risk time tt","code":""},{"path":"/articles/vaccine_impact_estimates.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Vaccine Impact Estimates","text":"use toy data illustrate usage package.","code":"data(coverage_and_incidence_mock_data) coverage <- coverage_and_incidence_mock_data$coverage_data incidence <- coverage_and_incidence_mock_data$incidence_data vaccine_effectiveness <- ve_mock_data$ve"},{"path":"/articles/vaccine_impact_estimates.html","id":"nae","dir":"Articles","previous_headings":"Example","what":"NAE","title":"Vaccine Impact Estimates","text":"","code":"nae <- compute_events_averted_by_vaccination(   events = incidence$events,   cumulative_coverage = coverage$cumulative_coverage,   vaccine_effectiveness = vaccine_effectiveness ) nae #>  [1]  0.0000000  0.0000000  1.8404774  6.6095710 11.0488282  7.3471758 #>  [7]  5.6472456 14.3417981  6.8704862  8.6083118  7.4468097  6.6467970 #> [13]  1.7373137  3.3178507  4.7765819  3.5559705  0.8146056  0.6098621 #> [19]  1.9862810  1.2618912  0.0000000  0.0000000  0.0000000  0.0000000 #> [25]  0.0000000  0.8982954  0.0000000  0.0000000  0.0000000  0.0000000 #> [31]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [37]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [43]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [49]  0.0000000  0.0000000  0.0000000  0.0000000"},{"path":"/articles/vaccine_impact_estimates.html","id":"nabe","dir":"Articles","previous_headings":"Example","what":"NAbE","title":"Vaccine Impact Estimates","text":"also possible compute number avertable events many values alpha:","code":"nabe <- compute_events_avertable_by_increasing_coverage(   events = incidence$events,   diff_cumulative_coverage = c(0, diff(coverage$cumulative_coverage)),   target_coverage = max(coverage$cumulative_coverage),   alpha = 0.1, # 10% increase in final coverage   vaccine_effectiveness = vaccine_effectiveness ) nabe #>  [1] 0.000000000 0.000000000 2.083148922 4.199830115 4.256792132 1.599197939 #>  [7] 0.965054815 1.103605549 0.512949020 0.373944572 0.231478586 0.130971005 #> [13] 0.026780188 0.028099463 0.039313806 0.019047362 0.003860255 0.002157079 #> [19] 0.004239641 0.002186660 0.000000000 0.000000000 0.000000000 0.000000000 #> [25] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [31] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [37] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [43] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [49] 0.000000000 0.000000000 0.000000000 0.000000000 nabe_many_alphas <- compute_events_avertable_by_increasing_coverage_many_alphas(   events = incidence$events,   diff_cumulative_coverage = c(0, diff(coverage$cumulative_coverage)),   target_coverage = max(coverage$cumulative_coverage),   alphas = c(0.1, 0.2, 0.3),   vaccine_effectiveness = vaccine_effectiveness ) nabe_many_alphas #>     alpha        nabe #> 1     0.1 0.000000000 #> 2     0.1 0.000000000 #> 3     0.1 2.083148922 #> 4     0.1 4.199830115 #> 5     0.1 4.256792132 #> 6     0.1 1.599197939 #> 7     0.1 0.965054815 #> 8     0.1 1.103605549 #> 9     0.1 0.512949020 #> 10    0.1 0.373944572 #> 11    0.1 0.231478586 #> 12    0.1 0.130971005 #> 13    0.1 0.026780188 #> 14    0.1 0.028099463 #> 15    0.1 0.039313806 #> 16    0.1 0.019047362 #> 17    0.1 0.003860255 #> 18    0.1 0.002157079 #> 19    0.1 0.004239641 #> 20    0.1 0.002186660 #> 21    0.1 0.000000000 #> 22    0.1 0.000000000 #> 23    0.1 0.000000000 #> 24    0.1 0.000000000 #> 25    0.1 0.000000000 #> 26    0.1 0.000000000 #> 27    0.1 0.000000000 #> 28    0.1 0.000000000 #> 29    0.1 0.000000000 #> 30    0.1 0.000000000 #> 31    0.1 0.000000000 #> 32    0.1 0.000000000 #> 33    0.1 0.000000000 #> 34    0.1 0.000000000 #> 35    0.1 0.000000000 #> 36    0.1 0.000000000 #> 37    0.1 0.000000000 #> 38    0.1 0.000000000 #> 39    0.1 0.000000000 #> 40    0.1 0.000000000 #> 41    0.1 0.000000000 #> 42    0.1 0.000000000 #> 43    0.1 0.000000000 #> 44    0.1 0.000000000 #> 45    0.1 0.000000000 #> 46    0.1 0.000000000 #> 47    0.1 0.000000000 #> 48    0.1 0.000000000 #> 49    0.1 0.000000000 #> 50    0.1 0.000000000 #> 51    0.1 0.000000000 #> 52    0.1 0.000000000 #> 53    0.2 0.000000000 #> 54    0.2 0.000000000 #> 55    0.2 2.328794786 #> 56    0.2 4.713274483 #> 57    0.2 4.775868536 #> 58    0.2 1.791354938 #> 59    0.2 1.081951110 #> 60    0.2 1.233792948 #> 61    0.2 0.572911786 #> 62    0.2 0.417069331 #> 63    0.2 0.257935547 #> 64    0.2 0.145759021 #> 65    0.2 0.029800101 #> 66    0.2 0.031254153 #> 67    0.2 0.043720203 #> 68    0.2 0.021174939 #> 69    0.2 0.004291013 #> 70    0.2 0.002397329 #> 71    0.2 0.004711822 #> 72    0.2 0.002429917 #> 73    0.2 0.000000000 #> 74    0.2 0.000000000 #> 75    0.2 0.000000000 #> 76    0.2 0.000000000 #> 77    0.2 0.000000000 #> 78    0.2 0.000000000 #> 79    0.2 0.000000000 #> 80    0.2 0.000000000 #> 81    0.2 0.000000000 #> 82    0.2 0.000000000 #> 83    0.2 0.000000000 #> 84    0.2 0.000000000 #> 85    0.2 0.000000000 #> 86    0.2 0.000000000 #> 87    0.2 0.000000000 #> 88    0.2 0.000000000 #> 89    0.2 0.000000000 #> 90    0.2 0.000000000 #> 91    0.2 0.000000000 #> 92    0.2 0.000000000 #> 93    0.2 0.000000000 #> 94    0.2 0.000000000 #> 95    0.2 0.000000000 #> 96    0.2 0.000000000 #> 97    0.2 0.000000000 #> 98    0.2 0.000000000 #> 99    0.2 0.000000000 #> 100   0.2 0.000000000 #> 101   0.2 0.000000000 #> 102   0.2 0.000000000 #> 103   0.2 0.000000000 #> 104   0.2 0.000000000 #> 105   0.3 0.000000000 #> 106   0.3 0.000000000 #> 107   0.3 2.577470051 #> 108   0.3 5.237121057 #> 109   0.3 5.305163065 #> 110   0.3 1.986666912 #> 111   0.3 1.200974519 #> 112   0.3 1.365596560 #> 113   0.3 0.633502428 #> 114   0.3 0.460522352 #> 115   0.3 0.284544592 #> 116   0.3 0.160595013 #> 117   0.3 0.032829027 #> 118   0.3 0.034415422 #> 119   0.3 0.048134312 #> 120   0.3 0.023304770 #> 121   0.3 0.004722140 #> 122   0.3 0.002637695 #> 123   0.3 0.005184226 #> 124   0.3 0.002673234 #> 125   0.3 0.000000000 #> 126   0.3 0.000000000 #> 127   0.3 0.000000000 #> 128   0.3 0.000000000 #> 129   0.3 0.000000000 #> 130   0.3 0.000000000 #> 131   0.3 0.000000000 #> 132   0.3 0.000000000 #> 133   0.3 0.000000000 #> 134   0.3 0.000000000 #> 135   0.3 0.000000000 #> 136   0.3 0.000000000 #> 137   0.3 0.000000000 #> 138   0.3 0.000000000 #> 139   0.3 0.000000000 #> 140   0.3 0.000000000 #> 141   0.3 0.000000000 #> 142   0.3 0.000000000 #> 143   0.3 0.000000000 #> 144   0.3 0.000000000 #> 145   0.3 0.000000000 #> 146   0.3 0.000000000 #> 147   0.3 0.000000000 #> 148   0.3 0.000000000 #> 149   0.3 0.000000000 #> 150   0.3 0.000000000 #> 151   0.3 0.000000000 #> 152   0.3 0.000000000 #> 153   0.3 0.000000000 #> 154   0.3 0.000000000 #> 155   0.3 0.000000000 #> 156   0.3 0.000000000"},{"path":"/articles/vaccine_impact_estimates.html","id":"nnv","dir":"Articles","previous_headings":"Example","what":"NNV","title":"Vaccine Impact Estimates","text":"","code":"initial_pop_at_risk <- 1000 pop_at_risk <- initial_pop_at_risk - cumsum(incidence$events)  nnv <- compute_number_needed_to_vaccinate(   events = incidence$events,   events_averted = nae,   pop_at_risk = pop_at_risk,   vaccine_effectiveness = vaccine_effectiveness ) nnv #>  [1]  51.28326  44.51670  37.08168  23.94800  21.99383  42.35913  68.40574 #>  [8]  29.51987  67.68764  57.01188  68.45710  78.07731 305.59363 161.87950 #> [15] 113.25044 152.61881 670.36609 898.66866 276.16938 434.53507        NA #> [22]        NA        NA        NA        NA 610.93487        NA        NA #> [29]        NA        NA        NA        NA        NA        NA        NA #> [36]        NA        NA        NA        NA        NA        NA        NA #> [43]        NA        NA        NA        NA        NA        NA        NA #> [50]        NA        NA        NA"},{"path":"/articles/vaccine_impact_estimates.html","id":"references","dir":"Articles","previous_headings":"Example","what":"References","title":"Vaccine Impact Estimates","text":"applied adapted version methods used Foppa et al. Machado et al. influenza vaccination impact. Foppa IM, Cheng PY, Reynolds SB, Shay DK, Carias C, Bresee JS, et al. Deaths averted influenza vaccination U.S. seasons 2005/06 2013/14. Vaccine. 2015 June 12;33(26):3003–9. Machado , Mazagatos C, Dijkstra F, Kislaya , Gherasim , McDonald SA, et al. Impact influenza vaccination programmes among elderly population primary care, Portugal, Spain Netherlands: 2015/16 2017/18 influenza seasons. Euro Surveill Bull Eur Sur Mal Transm Eur Commun Dis Bull. 2019 Nov;24(45):1900268.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yohann Mansiaux. Author, maintainer. Alexandre Blake. Author. Baltazar Nunes. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mansiaux Y, Blake , Nunes B (2025). vaccineimpact: Impact Study Vaccine Effectiveness. R package version 0.0.1.","code":"@Manual{,   title = {vaccineimpact: Impact Study of Vaccine Effectiveness},   author = {Yohann Mansiaux and Alexandre Blake and Baltazar Nunes},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"/index.html","id":"vaccineimpact","dir":"","previous_headings":"","what":"Impact Study of Vaccine Effectiveness","title":"Impact Study of Vaccine Effectiveness","text":"goal {vaccineimpact} assess impact vaccines using following estimates: Number events averted vaccination (NAE) Number avertable events considering increase final coverage (NAbE) Number needed vaccinate (NNV) prevent one event","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Impact Study of Vaccine Effectiveness","text":"can install development version vaccineimpact GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Epiconcept-Paris/vaccineimpact\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Impact Study of Vaccine Effectiveness","text":"toy data included package illustrate usage package.","code":"library(vaccineimpact) data(coverage_and_incidence_mock_data) data(ve_mock_data) coverage <- coverage_and_incidence_mock_data$coverage_data incidence <- coverage_and_incidence_mock_data$incidence_data vaccine_effectiveness <- ve_mock_data$ve"},{"path":"/index.html","id":"nae","dir":"","previous_headings":"Example","what":"NAE","title":"Impact Study of Vaccine Effectiveness","text":"","code":"nae <- compute_events_averted_by_vaccination(   events = incidence$events,   cumulative_coverage = coverage$cumulative_coverage,   vaccine_effectiveness = vaccine_effectiveness ) nae #>  [1]  0.0000000  0.0000000  1.8404774  6.6095710 11.0488282  7.3471758 #>  [7]  5.6472456 14.3417981  6.8704862  8.6083118  7.4468097  6.6467970 #> [13]  1.7373137  3.3178507  4.7765819  3.5559705  0.8146056  0.6098621 #> [19]  1.9862810  1.2618912  0.0000000  0.0000000  0.0000000  0.0000000 #> [25]  0.0000000  0.8982954  0.0000000  0.0000000  0.0000000  0.0000000 #> [31]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [37]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [43]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [49]  0.0000000  0.0000000  0.0000000  0.0000000"},{"path":"/index.html","id":"nabe","dir":"","previous_headings":"Example","what":"NAbE","title":"Impact Study of Vaccine Effectiveness","text":"","code":"nabe <- compute_events_avertable_by_increasing_coverage(   events = incidence$events,   diff_cumulative_coverage = c(0, diff(coverage$cumulative_coverage)),   target_coverage = max(coverage$cumulative_coverage),   alpha = 0.1, # 10% increase in final coverage   vaccine_effectiveness = vaccine_effectiveness ) nabe #>  [1] 0.000000000 0.000000000 2.083148922 4.199830115 4.256792132 1.599197939 #>  [7] 0.965054815 1.103605549 0.512949020 0.373944572 0.231478586 0.130971005 #> [13] 0.026780188 0.028099463 0.039313806 0.019047362 0.003860255 0.002157079 #> [19] 0.004239641 0.002186660 0.000000000 0.000000000 0.000000000 0.000000000 #> [25] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [31] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [37] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [43] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [49] 0.000000000 0.000000000 0.000000000 0.000000000"},{"path":"/index.html","id":"nnv","dir":"","previous_headings":"Example","what":"NNV","title":"Impact Study of Vaccine Effectiveness","text":"information can found vignette.","code":"initial_pop_at_risk <- 1000 pop_at_risk <- initial_pop_at_risk - cumsum(incidence$events)  nnv <- compute_number_needed_to_vaccinate(   events = incidence$events,   events_averted = nae,   pop_at_risk = pop_at_risk,   vaccine_effectiveness = vaccine_effectiveness ) nnv #>  [1]  51.28326  44.51670  37.08168  23.94800  21.99383  42.35913  68.40574 #>  [8]  29.51987  67.68764  57.01188  68.45710  78.07731 305.59363 161.87950 #> [15] 113.25044 152.61881 670.36609 898.66866 276.16938 434.53507        NA #> [22]        NA        NA        NA        NA 610.93487        NA        NA #> [29]        NA        NA        NA        NA        NA        NA        NA #> [36]        NA        NA        NA        NA        NA        NA        NA #> [43]        NA        NA        NA        NA        NA        NA        NA #> [50]        NA        NA        NA"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 vaccineimpact authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/coverage_and_incidence_mock_data.html","id":null,"dir":"Reference","previous_headings":"","what":"coverage_and_incidence_mock_data — coverage_and_incidence_mock_data","title":"coverage_and_incidence_mock_data — coverage_and_incidence_mock_data","text":"Description.","code":""},{"path":"/reference/coverage_and_incidence_mock_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coverage_and_incidence_mock_data — coverage_and_incidence_mock_data","text":"","code":"coverage_and_incidence_mock_data"},{"path":"/reference/coverage_and_incidence_mock_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"coverage_and_incidence_mock_data — coverage_and_incidence_mock_data","text":"data frame  rows  variables: incidence_data data.frame coverage_data data.frame","code":""},{"path":"/reference/coverage_and_incidence_mock_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"coverage_and_incidence_mock_data — coverage_and_incidence_mock_data","text":"Source","code":""},{"path":"/reference/vaccine_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vaccine coverage for a given value of alpha (percent of increase in final vaccine coverage) — compute_VC_alpha","title":"Compute vaccine coverage for a given value of alpha (percent of increase in final vaccine coverage) — compute_VC_alpha","text":"Compute vaccine coverage given value alpha (percent increase final vaccine coverage) Compute events averted increasing coverage given value alpha (percent increase final vaccine coverage) Compute events averted increasing coverage many values alpha Compute events averted vaccination Compute number individuals needed vaccinate prevent one event","code":""},{"path":"/reference/vaccine_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vaccine coverage for a given value of alpha (percent of increase in final vaccine coverage) — compute_VC_alpha","text":"","code":"compute_VC_alpha(diff_cumulative_coverage, target_coverage, alpha)  compute_events_avertable_by_increasing_coverage(   events,   diff_cumulative_coverage,   target_coverage,   alpha,   vaccine_effectiveness )  compute_events_avertable_by_increasing_coverage_many_alphas(   events,   diff_cumulative_coverage,   target_coverage,   alphas,   vaccine_effectiveness )  compute_events_averted_by_vaccination(   events,   cumulative_coverage,   vaccine_effectiveness )  compute_number_needed_to_vaccinate(   events,   events_averted,   pop_at_risk,   vaccine_effectiveness )"},{"path":"/reference/vaccine_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vaccine coverage for a given value of alpha (percent of increase in final vaccine coverage) — compute_VC_alpha","text":"diff_cumulative_coverage Vector difference cumulative coverage (cumulative_coverage_t - cumulative_coverage_t-1) target_coverage Target coverage (maximum coverage) alpha percent increase final vaccine coverage events Vector number events vaccine_effectiveness Vector vaccine effectiveness alphas Vector alpha values cumulative_coverage Vector cumulative coverage events_averted Vector number events averted pop_at_risk Population risk","code":""},{"path":"/reference/vaccine_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vaccine coverage for a given value of alpha (percent of increase in final vaccine coverage) — compute_VC_alpha","text":"vaccine coverage number events averted data frame alpha values events averted number events averted number individuals needed vaccinate avert one event","code":""},{"path":"/reference/vaccine_impact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vaccine coverage for a given value of alpha (percent of increase in final vaccine coverage) — compute_VC_alpha","text":"","code":"diff_cumulative_coverage <- c(0, diff(coverage_and_incidence_mock_data$coverage_data$ cumulative_coverage)) target_coverage <- max(coverage_and_incidence_mock_data$coverage_data$ cumulative_coverage) alpha <- 0.1 compute_VC_alpha(diff_cumulative_coverage, target_coverage, alpha) #>  [1] 0.000000 0.000000 0.085500 0.123750 0.131625 0.108000 0.117000 0.070875 #>  [9] 0.073125 0.050625 0.039375 0.024750 0.021375 0.013500 0.012375 0.007875 #> [17] 0.006750 0.004500 0.003375 0.002250 0.001125 0.001125 0.001125 0.000000 #> [25] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [33] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [41] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [49] 0.000000 0.000000 0.000000 0.000000 events <- coverage_and_incidence_mock_data$incidence_data$events diff_cumulative_coverage <- c(0, diff(coverage_and_incidence_mock_data$coverage_data$ cumulative_coverage)) target_coverage <- max(coverage_and_incidence_mock_data$coverage_data$ cumulative_coverage) alpha <- 0.1 vaccine_effectiveness <- ve_mock_data$ve compute_events_avertable_by_increasing_coverage(events, diff_cumulative_coverage, target_coverage, alpha, vaccine_effectiveness) #>  [1] 0.000000000 0.000000000 2.083148922 4.199830115 4.256792132 1.599197939 #>  [7] 0.965054815 1.103605549 0.512949020 0.373944572 0.231478586 0.130971005 #> [13] 0.026780188 0.028099463 0.039313806 0.019047362 0.003860255 0.002157079 #> [19] 0.004239641 0.002186660 0.000000000 0.000000000 0.000000000 0.000000000 #> [25] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [31] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [37] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [43] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #> [49] 0.000000000 0.000000000 0.000000000 0.000000000 events <- coverage_and_incidence_mock_data$incidence_data$events diff_cumulative_coverage <- c(0, diff(coverage_and_incidence_mock_data$coverage_data$ cumulative_coverage)) target_coverage <- max(coverage_and_incidence_mock_data$coverage_data$ cumulative_coverage) alphas <- c(0.1, 0.2, 0.3) vaccine_effectiveness <- ve_mock_data$ve compute_events_avertable_by_increasing_coverage_many_alphas(events, diff_cumulative_coverage, target_coverage, alphas, vaccine_effectiveness) #>     alpha        nabe #> 1     0.1 0.000000000 #> 2     0.1 0.000000000 #> 3     0.1 2.083148922 #> 4     0.1 4.199830115 #> 5     0.1 4.256792132 #> 6     0.1 1.599197939 #> 7     0.1 0.965054815 #> 8     0.1 1.103605549 #> 9     0.1 0.512949020 #> 10    0.1 0.373944572 #> 11    0.1 0.231478586 #> 12    0.1 0.130971005 #> 13    0.1 0.026780188 #> 14    0.1 0.028099463 #> 15    0.1 0.039313806 #> 16    0.1 0.019047362 #> 17    0.1 0.003860255 #> 18    0.1 0.002157079 #> 19    0.1 0.004239641 #> 20    0.1 0.002186660 #> 21    0.1 0.000000000 #> 22    0.1 0.000000000 #> 23    0.1 0.000000000 #> 24    0.1 0.000000000 #> 25    0.1 0.000000000 #> 26    0.1 0.000000000 #> 27    0.1 0.000000000 #> 28    0.1 0.000000000 #> 29    0.1 0.000000000 #> 30    0.1 0.000000000 #> 31    0.1 0.000000000 #> 32    0.1 0.000000000 #> 33    0.1 0.000000000 #> 34    0.1 0.000000000 #> 35    0.1 0.000000000 #> 36    0.1 0.000000000 #> 37    0.1 0.000000000 #> 38    0.1 0.000000000 #> 39    0.1 0.000000000 #> 40    0.1 0.000000000 #> 41    0.1 0.000000000 #> 42    0.1 0.000000000 #> 43    0.1 0.000000000 #> 44    0.1 0.000000000 #> 45    0.1 0.000000000 #> 46    0.1 0.000000000 #> 47    0.1 0.000000000 #> 48    0.1 0.000000000 #> 49    0.1 0.000000000 #> 50    0.1 0.000000000 #> 51    0.1 0.000000000 #> 52    0.1 0.000000000 #> 53    0.2 0.000000000 #> 54    0.2 0.000000000 #> 55    0.2 2.328794786 #> 56    0.2 4.713274483 #> 57    0.2 4.775868536 #> 58    0.2 1.791354938 #> 59    0.2 1.081951110 #> 60    0.2 1.233792948 #> 61    0.2 0.572911786 #> 62    0.2 0.417069331 #> 63    0.2 0.257935547 #> 64    0.2 0.145759021 #> 65    0.2 0.029800101 #> 66    0.2 0.031254153 #> 67    0.2 0.043720203 #> 68    0.2 0.021174939 #> 69    0.2 0.004291013 #> 70    0.2 0.002397329 #> 71    0.2 0.004711822 #> 72    0.2 0.002429917 #> 73    0.2 0.000000000 #> 74    0.2 0.000000000 #> 75    0.2 0.000000000 #> 76    0.2 0.000000000 #> 77    0.2 0.000000000 #> 78    0.2 0.000000000 #> 79    0.2 0.000000000 #> 80    0.2 0.000000000 #> 81    0.2 0.000000000 #> 82    0.2 0.000000000 #> 83    0.2 0.000000000 #> 84    0.2 0.000000000 #> 85    0.2 0.000000000 #> 86    0.2 0.000000000 #> 87    0.2 0.000000000 #> 88    0.2 0.000000000 #> 89    0.2 0.000000000 #> 90    0.2 0.000000000 #> 91    0.2 0.000000000 #> 92    0.2 0.000000000 #> 93    0.2 0.000000000 #> 94    0.2 0.000000000 #> 95    0.2 0.000000000 #> 96    0.2 0.000000000 #> 97    0.2 0.000000000 #> 98    0.2 0.000000000 #> 99    0.2 0.000000000 #> 100   0.2 0.000000000 #> 101   0.2 0.000000000 #> 102   0.2 0.000000000 #> 103   0.2 0.000000000 #> 104   0.2 0.000000000 #> 105   0.3 0.000000000 #> 106   0.3 0.000000000 #> 107   0.3 2.577470051 #> 108   0.3 5.237121057 #> 109   0.3 5.305163065 #> 110   0.3 1.986666912 #> 111   0.3 1.200974519 #> 112   0.3 1.365596560 #> 113   0.3 0.633502428 #> 114   0.3 0.460522352 #> 115   0.3 0.284544592 #> 116   0.3 0.160595013 #> 117   0.3 0.032829027 #> 118   0.3 0.034415422 #> 119   0.3 0.048134312 #> 120   0.3 0.023304770 #> 121   0.3 0.004722140 #> 122   0.3 0.002637695 #> 123   0.3 0.005184226 #> 124   0.3 0.002673234 #> 125   0.3 0.000000000 #> 126   0.3 0.000000000 #> 127   0.3 0.000000000 #> 128   0.3 0.000000000 #> 129   0.3 0.000000000 #> 130   0.3 0.000000000 #> 131   0.3 0.000000000 #> 132   0.3 0.000000000 #> 133   0.3 0.000000000 #> 134   0.3 0.000000000 #> 135   0.3 0.000000000 #> 136   0.3 0.000000000 #> 137   0.3 0.000000000 #> 138   0.3 0.000000000 #> 139   0.3 0.000000000 #> 140   0.3 0.000000000 #> 141   0.3 0.000000000 #> 142   0.3 0.000000000 #> 143   0.3 0.000000000 #> 144   0.3 0.000000000 #> 145   0.3 0.000000000 #> 146   0.3 0.000000000 #> 147   0.3 0.000000000 #> 148   0.3 0.000000000 #> 149   0.3 0.000000000 #> 150   0.3 0.000000000 #> 151   0.3 0.000000000 #> 152   0.3 0.000000000 #> 153   0.3 0.000000000 #> 154   0.3 0.000000000 #> 155   0.3 0.000000000 #> 156   0.3 0.000000000 compute_events_averted_by_vaccination(events = 100, cumulative_coverage = 0.5, vaccine_effectiveness = 0.5) #> [1] 33.33333 data(\"coverage_and_incidence_mock_data\") data(\"ve_mock_data\") events <- coverage_and_incidence_mock_data$incidence_data$events cumulative_coverage <- coverage_and_incidence_mock_data$coverage_data$cumulative_coverage vaccine_effectiveness <- ve_mock_data$ve compute_events_averted_by_vaccination(events, cumulative_coverage, vaccine_effectiveness) #>  [1]  0.0000000  0.0000000  1.8404774  6.6095710 11.0488282  7.3471758 #>  [7]  5.6472456 14.3417981  6.8704862  8.6083118  7.4468097  6.6467970 #> [13]  1.7373137  3.3178507  4.7765819  3.5559705  0.8146056  0.6098621 #> [19]  1.9862810  1.2618912  0.0000000  0.0000000  0.0000000  0.0000000 #> [25]  0.0000000  0.8982954  0.0000000  0.0000000  0.0000000  0.0000000 #> [31]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [37]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [43]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [49]  0.0000000  0.0000000  0.0000000  0.0000000 events <- coverage_and_incidence_mock_data$incidence_data$events cumulative_coverage <- coverage_and_incidence_mock_data$coverage_data$cumulative_coverage events_averted <- compute_events_averted_by_vaccination(events, cumulative_coverage, vaccine_effectiveness) pop_at_risk <- 1000 vaccine_effectiveness <- ve_mock_data$ve compute_number_needed_to_vaccinate(events, events_averted, pop_at_risk, vaccine_effectiveness) #>  [1]   52.86934   47.56058   41.29363   28.14101   27.42372   54.30658 #>  [7]   89.06997   39.46507   91.84212   78.52875   95.47713  110.27868 #> [13]  432.85216  230.26955  162.24991  219.91183  967.33923 1298.65413 #> [19]  400.24548  631.59167         NA         NA         NA         NA #> [25]         NA  890.57562         NA         NA         NA         NA #> [31]         NA         NA         NA         NA         NA         NA #> [37]         NA         NA         NA         NA         NA         NA #> [43]         NA         NA         NA         NA         NA         NA #> [49]         NA         NA         NA         NA"},{"path":"/reference/ve_mock_data.html","id":null,"dir":"Reference","previous_headings":"","what":"ve_mock_data — ve_mock_data","title":"ve_mock_data — ve_mock_data","text":"Vaccine effectiveness data.","code":""},{"path":"/reference/ve_mock_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ve_mock_data — ve_mock_data","text":"","code":"ve_mock_data"},{"path":"/reference/ve_mock_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ve_mock_data — ve_mock_data","text":"data frame 52 rows 2 variables: week Date ve numeric","code":""},{"path":"/reference/ve_mock_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ve_mock_data — ve_mock_data","text":"Source","code":""},{"path":"/news/index.html","id":"vaccineimpact-001","dir":"Changelog","previous_headings":"","what":"vaccineimpact 0.0.1","title":"vaccineimpact 0.0.1","text":"Initial CRAN submission.","code":""}]
